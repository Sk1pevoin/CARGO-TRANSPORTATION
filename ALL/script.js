document.addEventListener('DOMContentLoaded', function() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const registerForm = document.getElementById('registerForm');
    if (registerForm) {
        registerForm.addEventListener('submit', handleRegister);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
    const loginForm = document.getElementById('loginForm');
    if (loginForm) {
        loginForm.addEventListener('submit', handleLogin);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏
    const zayavkaForm = document.getElementById('zayavkaForm');
    if (zayavkaForm) {
        zayavkaForm.addEventListener('submit', handleZayavka);
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (window.location.pathname.includes('admin.html')) {
        loadBidsForAdmin();
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Bid.html
    if (window.location.pathname.includes('Bid.html')) {
        loadBidsForUser();
    }
});

// üìù –û–ë–†–ê–ë–û–¢–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
async function handleRegister(event) {
    event.preventDefault();
    
    const login = document.getElementById('newUsername').value;
    const password = document.getElementById('newPassword').value;
    
    try {
        await transportDB.registerUser({ login, password });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        const successMessage = document.getElementById('success-message');
        successMessage.style.display = 'block';
        
        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        event.target.reset();
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            window.location.href = 'login.html';
        }, 2000);
        
    } catch (error) {
        alert('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ' + error.message);
    }
}

// üîê –û–ë–†–ê–ë–û–¢–ö–ê –í–•–û–î–ê
async function handleLogin(event) {
    event.preventDefault();
    
    const login = document.getElementById('username').value;
    const password = document.getElementById('password').value;
    
    const user = await transportDB.loginUser(login, password);
    
    if (user) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        localStorage.setItem('current_user', JSON.stringify(user));
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.location.href = 'Web.html';
    } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        const errorMessage = document.getElementById('error-message');
        errorMessage.style.display = 'block';
    }
}

// üìã –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–Ø–í–ö–ò
async function handleZayavka(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const bidData = {
        name: '–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–µ—Ä–µ–≤–æ–∑–∫—É',
        wherefrom: formData.get('otkuda'),
        towhere: formData.get('kuda'),
        weight: formData.get('ves'),
        type: formData.get('tip'),
        date: formData.get('date')
    };
    
    try {
        await transportDB.addBid(bidData);
        alert('‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
        event.target.reset();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Bid.html
        if (window.location.pathname.includes('Bid.html')) {
            loadBidsForUser();
        }
        
    } catch (error) {
        alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏: ' + error.message);
    }
}

// üë®‚Äçüíº –ó–ê–ì–†–£–ó–ö–ê –ó–ê–Ø–í–û–ö –î–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê
async function loadBidsForAdmin() {
    const bids = await transportDB.getAllBids();
    const bidsList = document.getElementById('zayavkiList');
    
    if (bids.length === 0) {
        bidsList.innerHTML = '<p>–ù–µ—Ç –∑–∞—è–≤–æ–∫</p>';
        return;
    }
    
    let html = `
        <table style="width: 100%; border-collapse: collapse; margin: 20px 0;">
            <thead>
                <tr style="background: #f5f5f5;">
                    <th style="padding: 10px; border: 1px solid #ddd;">ID</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">–ú–∞—Ä—à—Ä—É—Ç</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">–î–∞—Ç–∞</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">–°—Ç–∞—Ç—É—Å</th>
                    <th style="padding: 10px; border: 1px solid #ddd;">–î–µ–π—Å—Ç–≤–∏—è</th>
                </tr>
            </thead>
            <tbody>
    `;
    
    bids.forEach(bid => {
        html += `
            <tr>
                <td style="padding: 10px; border: 1px solid #ddd;">${bid.id}</td>
                <td style="padding: 10px; border: 1px solid #ddd;">
                    ${bid.wherefrom} ‚Üí ${bid.towhere}
                </td>
                <td style="padding: 10px; border: 1px solid #ddd;">${bid.date}</td>
                <td style="padding: 10px; border: 1px solid #ddd;">${bid.status}</td>
                <td style="padding: 10px; border: 1px solid #ddd;">
                    <select onchange="updateBidStatus(${bid.id}, this.value)" 
                            style="padding: 5px; border: 1px solid #ddd;">
                        <option value="–Ω–æ–≤–∞—è" ${bid.status === '–Ω–æ–≤–∞—è' ? 'selected' : ''}>–ù–æ–≤–∞—è</option>
                        <option value="–≤ —Ä–∞–±–æ—Ç–µ" ${bid.status === '–≤ —Ä–∞–±–æ—Ç–µ' ? 'selected' : ''}>–í —Ä–∞–±–æ—Ç–µ</option>
                        <option value="–≤—ã–ø–æ–ª–Ω–µ–Ω–∞" ${bid.status === '–≤—ã–ø–æ–ª–Ω–µ–Ω–∞' ? 'selected' : ''}>–í—ã–ø–æ–ª–Ω–µ–Ω–∞</option>
                        <option value="–æ—Ç–º–µ–Ω–µ–Ω–∞" ${bid.status === '–æ—Ç–º–µ–Ω–µ–Ω–∞' ? 'selected' : ''}>–û—Ç–º–µ–Ω–µ–Ω–∞</option>
                    </select>
                </td>
            </tr>
        `;
    });
    
    html += '</tbody></table>';
    bidsList.innerHTML = html;
}

// üë§ –ó–ê–ì–†–£–ó–ö–ê –ó–ê–Ø–í–û–ö –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
async function loadBidsForUser() {
    const bids = await transportDB.getAllBids();
    const bidsList = document.getElementById('zayavkiList');
    
    if (!bidsList) return;
    
    if (bids.length === 0) {
        bidsList.innerHTML = '<p style="text-align: center; margin: 20px 0;">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫</p>';
        return;
    }
    
    let html = '<h3 style="margin-top: 30px;">–í–∞—à–∏ –∑–∞—è–≤–∫–∏</h3>';
    html += '<div class="bids-list">';
    
    bids.forEach(bid => {
        const statusColor = getStatusColor(bid.status);
        
        html += `
            <div class="bid-card" style="border: 1px solid #ddd; padding: 15px; margin: 10px 0; border-radius: 5px;">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <strong>${bid.wherefrom} ‚Üí ${bid.towhere}</strong>
                        <p style="margin: 5px 0; color: #666;">–î–∞—Ç–∞: ${bid.date}</p>
                    </div>
                    <span style="background: ${statusColor}; color: white; padding: 5px 10px; border-radius: 15px; font-size: 12px;">
                        ${bid.status}
                    </span>
                </div>
            </div>
        `;
    });
    
    html += '</div>';
    bidsList.innerHTML = html;
}

// üé® –ü–û–õ–£–ß–ï–ù–ò–ï –¶–í–ï–¢–ê –î–õ–Ø –°–¢–ê–¢–£–°–ê
function getStatusColor(status) {
    const colors = {
        '–Ω–æ–≤–∞—è': '#007bff',
        '–≤ —Ä–∞–±–æ—Ç–µ': '#ffc107',
        '–≤—ã–ø–æ–ª–Ω–µ–Ω–∞': '#28a745',
        '–æ—Ç–º–µ–Ω–µ–Ω–∞': '#dc3545'
    };
    return colors[status] || '#6c757d';
}

// üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê –ó–ê–Ø–í–ö–ò
async function updateBidStatus(bidId, newStatus) {
    try {
        await transportDB.updateBidStatus(bidId, newStatus);
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫
        loadBidsForAdmin();
    } catch (error) {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: ' + error.message);
    }
}

// üîó –ü–ï–†–ï–•–û–î –ü–û –°–°–´–õ–ö–ê–ú –í –£–°–õ–£–ì–ê–•
document.addEventListener('DOMContentLoaded', function() {
    const orderButtons = document.querySelectorAll('.order-btn');
    orderButtons.forEach(button => {
        button.addEventListener('click', function() {
            const link = this.getAttribute('data-link');
            if (link) {
                window.location.href = link;
            }
        });
    });
});